@model UniversityApplication.Models.Classroom

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Classroom</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ClassRoomDepartmentCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassRoomDepartmentCode, new SelectList(ViewBag.Departments, "Value", "Text"), "Select Department", new { @class = "form-control" })
                @*@Html.DropDownListFor(model => model.ClassRoomDepartmentCode, @ViewBag.Departments as SelectList, "Select Department", new {@class = "form-control"})*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassRoomCourseCode, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassRoomCourseCode, new SelectList(ViewBag.CourseCode, "Value", "Text"), "Select Course", new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.ClassRoomCourseCode, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassRoomRoomNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassRoomRoomNo, new SelectList(ViewBag.Room, "Value", "Text"), "Select Room", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassRoomRoomNo, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassRoomWeekDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ClassRoomWeekDay, new SelectList(ViewBag.Weekday, "Value", "Text"), "Select Weekday", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ClassRoomWeekDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassRoomStartsAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassRoomStartsAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.RadioButtonFor(model => model.ClassRoomStartsAt, "AM")AM
                @Html.RadioButtonFor(model => model.ClassRoomStartsAt, "PM")PM
                @Html.ValidationMessageFor(model => model.ClassRoomStartsAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ClassRoomEndssAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ClassRoomEndssAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.RadioButtonFor(model => model.ClassRoomEndssAt, "AM")AM
                @Html.RadioButtonFor(model => model.ClassRoomEndssAt, "PM")PM
                @Html.ValidationMessageFor(model => model.ClassRoomEndssAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2-Save col-md-10">
                <input type="submit" value="Allocate" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script language="javascript">
        $(document).ready(function() {

            $("#ClassRoomDepartmentCode").change(function () {
                // this will call when Department Dropdown select change
                var departmentName = $("#ClassRoomDepartmentCode").val();
                if (departmentName != null) {

                    
                    var ddCourseCode = $("#ClassRoomCourseCode");
                    ddCourseCode.empty(); // this line is for clear all items from CourseCode dropdown
                    ddCourseCode.append($("<option></option").val("").html("Select Course"));

                    // Here I will call Controller Action via Jquery to load CourseCode for selected Department
                    $.ajax({
                        url: "@Url.Action("GetCourseCode", "Classrooms")",
                        type: "GET",
                        data: { departmentName: departmentName },
                        dataType: "json",
                        success: function(data) {
                            $.each(data, function(i, val) {
                                ddCourseCode.append(
                                    $("<option></option>").val(val.CourseCode).html(val.CourseCode)
                                );
                            });
                        },
                        error: function() {
                            alert("Error GetCourseCode!");
                        }
                    });


                }
            });


        });

</script>


}
